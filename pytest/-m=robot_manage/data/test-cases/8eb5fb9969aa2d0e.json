{
  "uid" : "8eb5fb9969aa2d0e",
  "name" : "正常查询-question查询",
  "fullName" : "pytest.test_robot_faq_category.TestRobotFaqCategory#test_query_category",
  "historyId" : "11b2ac73948fff1c991f932ff4708e28",
  "time" : {
    "start" : 1600832102927,
    "stop" : 1600832103099,
    "duration" : 172
  },
  "description" : "\n        常规问答问答对分类信息--查询\n        ",
  "descriptionHtml" : "<pre><code>    常规问答问答对分类信息--查询\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <function Assert.get_result at 0x0000026B172E7510>('[{\"categoryId\": \"1810\", \"categoryName\": \"ZL\\\\u63a5\\\\u53e3\\\\u5b50\\\\u7c7b1-\\\\u5b50\\\\u7c7b\\\\u6dfb\\\\u52a01600831822.5759\"...], \"unAllot\": false}, {\"categoryId\": \"0\", \"categoryName\": \"\\\\u672a\\\\u5206\\\\u7c7b\", \"questionNum\": 2, \"unAllot\": true}]', '[{\"categoryId\": \"895\", \"categoryName\": \"ZL\\\\u6d4b\\\\u8bd5\\\\u5206\\\\u7c7b0918\", \"parentId\": \"0\", \"indexNo\": \"3\", \"robotI..., \"unAllot\": false}, {\"categoryId\": \"0\", \"categoryName\": \"\\\\u672a\\\\u5206\\\\u7c7b\", \"questionNum\": 25, \"unAllot\": true}]')\n +    where <function Assert.get_result at 0x0000026B172E7510> = Assert.get_result",
  "statusTrace" : "self = <test_robot_faq_category.TestRobotFaqCategory object at 0x0000026B1784FF98>\ndesc = '正常查询-question查询'\nparams = '{\"userId\": \"11\",\"robotId\": \"877\",\"keyName\":\"question\",\"keyword\":\"分类\"}'\nassert_value = 'sql-kicp_faq-select categoryId,categoryName,parentId,indexNo,robotId,addTime,modifyTime,userId,isunAllot from faq_robot_category where userId = 11 and robotId = 877 and categoryName!=\"未分类\" order by modifyTime desc;'\n\n    @pytest.mark.parametrize('desc,params,assert_value', query_category)  # 用例参数化\n    @allure.feature(\"常规问答问答对分类信息\")\n    @allure.story('常规问答问答对分类信息--查询')  # 描述\n    @allure.title('{desc}')  # title\n    @pytest.mark.flaky(returns=0)  # 标记失败后重新运行次数\n    @pytest.mark.category_faq\n    @pytest.mark.run(order=1)\n    def test_query_category(self, desc, params, assert_value):\n        \"\"\"\n        常规问答问答对分类信息--查询\n        \"\"\"\n        actual_result, expect_result = FaqQueryCategory.faq_query_category(self.url, params, assert_value)\n>       assert Assert.get_result(actual_result, expect_result)\nE       assert False\nE        +  where False = <function Assert.get_result at 0x0000026B172E7510>('[{\"categoryId\": \"1810\", \"categoryName\": \"ZL\\\\u63a5\\\\u53e3\\\\u5b50\\\\u7c7b1-\\\\u5b50\\\\u7c7b\\\\u6dfb\\\\u52a01600831822.5759\"...], \"unAllot\": false}, {\"categoryId\": \"0\", \"categoryName\": \"\\\\u672a\\\\u5206\\\\u7c7b\", \"questionNum\": 2, \"unAllot\": true}]', '[{\"categoryId\": \"895\", \"categoryName\": \"ZL\\\\u6d4b\\\\u8bd5\\\\u5206\\\\u7c7b0918\", \"parentId\": \"0\", \"indexNo\": \"3\", \"robotI..., \"unAllot\": false}, {\"categoryId\": \"0\", \"categoryName\": \"\\\\u672a\\\\u5206\\\\u7c7b\", \"questionNum\": 25, \"unAllot\": true}]')\nE        +    where <function Assert.get_result at 0x0000026B172E7510> = Assert.get_result\n\ntest_robot_faq_category.py:48: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1600832102822,
      "stop" : 1600832102822,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1600832104659,
      "stop" : 1600832104659,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "常规问答问答对分类信息--查询"
  }, {
    "name" : "feature",
    "value" : "常规问答问答对分类信息"
  }, {
    "name" : "tag",
    "value" : "category_faq"
  }, {
    "name" : "parentSuite",
    "value" : "pytest"
  }, {
    "name" : "suite",
    "value" : "test_robot_faq_category"
  }, {
    "name" : "subSuite",
    "value" : "TestRobotFaqCategory"
  }, {
    "name" : "host",
    "value" : "WIN-OQ20V7UABJF"
  }, {
    "name" : "thread",
    "value" : "6220-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "pytest.test_robot_faq_category"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "assert_value",
    "value" : "'sql-kicp_faq-select categoryId,categoryName,parentId,indexNo,robotId,addTime,modifyTime,userId,isunAllot from faq_robot_category where userId = 11 and robotId = 877 and categoryName!=\"未分类\" order by modifyTime desc;'"
  }, {
    "name" : "desc",
    "value" : "'正常查询-question查询'"
  }, {
    "name" : "params",
    "value" : "'{\"userId\": \"11\",\"robotId\": \"877\",\"keyName\":\"question\",\"keyword\":\"分类\"}'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "category_faq" ]
  },
  "source" : "8eb5fb9969aa2d0e.json",
  "parameterValues" : [ "'sql-kicp_faq-select categoryId,categoryName,parentId,indexNo,robotId,addTime,modifyTime,userId,isunAllot from faq_robot_category where userId = 11 and robotId = 877 and categoryName!=\"未分类\" order by modifyTime desc;'", "'正常查询-question查询'", "'{\"userId\": \"11\",\"robotId\": \"877\",\"keyName\":\"question\",\"keyword\":\"分类\"}'" ]
}