{
  "uid" : "8f07a77c30db8d43",
  "name" : "错参-userId为空",
  "fullName" : "test_robot_config.TestRobotConfig#test_robot_guide_query",
  "historyId" : "52d05d9e62e4b4a2ec412cb6ed285f18",
  "time" : {
    "start" : 1599642122217,
    "stop" : 1599642122262,
    "duration" : 45
  },
  "description" : "\n        机器人引导语查询\n        ",
  "descriptionHtml" : "<pre><code>    机器人引导语查询\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <function Assert.get_result at 0x00000166541E1D08>('8', '1213')\n +    where <function Assert.get_result at 0x00000166541E1D08> = Assert.get_result",
  "statusTrace" : "self = <test_robot_config.TestRobotConfig object at 0x00000166575A8FD0>\ndesc = '错参-userId为空', params = '{\"robotId\":\"709\",\"userId\":\"\"}'\nassert_value = 'code-1213'\n\n    @pytest.mark.parametrize('desc,params,assert_value', guide_query_data)  # 用例参数化\n    @allure.feature(\"机器人配置\")\n    @allure.story('机器人引导语查询')  # 描述\n    @allure.title('{desc}')  # title\n    @pytest.mark.flaky(returns=0)  # 标记失败后重新运行次数\n    @pytest.mark.robot_config\n    def test_robot_guide_query(self, desc, params, assert_value):\n        \"\"\"\n        机器人引导语查询\n        \"\"\"\n        actual_result, except_result = RobotGuideQuery.guide_query(self.url, params, assert_value)\n>       assert Assert.get_result(actual_result, except_result)\nE       AssertionError: assert False\nE        +  where False = <function Assert.get_result at 0x00000166541E1D08>('8', '1213')\nE        +    where <function Assert.get_result at 0x00000166541E1D08> = Assert.get_result\n\ntest_robot_config.py:92: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1599642120139,
      "stop" : 1599642120139,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1599642123402,
      "stop" : 1599642123402,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "机器人引导语查询"
  }, {
    "name" : "feature",
    "value" : "机器人配置"
  }, {
    "name" : "tag",
    "value" : "robot_config"
  }, {
    "name" : "suite",
    "value" : "test_robot_config"
  }, {
    "name" : "subSuite",
    "value" : "TestRobotConfig"
  }, {
    "name" : "host",
    "value" : "WIN-OQ20V7UABJF"
  }, {
    "name" : "thread",
    "value" : "10424-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_robot_config"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "assert_value",
    "value" : "'code-1213'"
  }, {
    "name" : "desc",
    "value" : "'错参-userId为空'"
  }, {
    "name" : "params",
    "value" : "'{\"robotId\":\"709\",\"userId\":\"\"}'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "robot_config" ]
  },
  "source" : "8f07a77c30db8d43.json",
  "parameterValues" : [ "'code-1213'", "'错参-userId为空'", "'{\"robotId\":\"709\",\"userId\":\"\"}'" ]
}