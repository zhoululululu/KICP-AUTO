{
  "uid" : "cd18e136abc1c30f",
  "name" : "正常查询-可以直接引用",
  "fullName" : "pytest.test_robot_faq.TestRobotFaq#test_check_question",
  "historyId" : "c778924230329f0228045aff3eff7806",
  "time" : {
    "start" : 1600424591991,
    "stop" : 1600424592108,
    "duration" : 117
  },
  "description" : "\n        常规问答问答对配置信息--相似性判断--标准问题\n        ",
  "descriptionHtml" : "<pre><code>    常规问答问答对配置信息--相似性判断--标准问题\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <function Assert.get_result at 0x0000018B4AF03510>({'code': 1101}, '可以直接引用')\n +    where <function Assert.get_result at 0x0000018B4AF03510> = Assert.get_result",
  "statusTrace" : "self = <test_robot_faq.TestRobotFaq object at 0x0000018B4BC472B0>\ndesc = '正常查询-可以直接引用'\nparams = '{\"robotId\": \"877\", \"userId\": \"11\",\"question\": \"啊哈哈哈哈哈哈哈哈安安大叔\",\"size\": 1}'\nassert_value = 'bean-可以直接引用'\n\n    @pytest.mark.parametrize('desc,params,assert_value', check_question)  # 用例参数化\n    @allure.feature(\"常规问答问答对配置信息\")\n    @allure.story('常规问答问答对配置信息--相似性判断--标准问题')  # 描述\n    @allure.title('{desc}')  # title\n    @pytest.mark.flaky(returns=0)  # 标记失败后重新运行次数\n    @pytest.mark.robot_faq\n    def test_check_question(self, desc, params, assert_value):\n        \"\"\"\n        常规问答问答对配置信息--相似性判断--标准问题\n        \"\"\"\n        actual_result, expect_result = FaqCheckQuestion.faq_check_question(self.url, params, assert_value)\n>       assert Assert.get_result(actual_result, expect_result)\nE       AssertionError: assert False\nE        +  where False = <function Assert.get_result at 0x0000018B4AF03510>({'code': 1101}, '可以直接引用')\nE        +    where <function Assert.get_result at 0x0000018B4AF03510> = Assert.get_result\n\ntest_robot_faq.py:99: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1600424588759,
      "stop" : 1600424588759,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1600424594369,
      "stop" : 1600424594369,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "常规问答问答对配置信息"
  }, {
    "name" : "story",
    "value" : "常规问答问答对配置信息--相似性判断--标准问题"
  }, {
    "name" : "tag",
    "value" : "robot_faq"
  }, {
    "name" : "parentSuite",
    "value" : "pytest"
  }, {
    "name" : "suite",
    "value" : "test_robot_faq"
  }, {
    "name" : "subSuite",
    "value" : "TestRobotFaq"
  }, {
    "name" : "host",
    "value" : "WIN-OQ20V7UABJF"
  }, {
    "name" : "thread",
    "value" : "17960-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "pytest.test_robot_faq"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "assert_value",
    "value" : "'bean-可以直接引用'"
  }, {
    "name" : "desc",
    "value" : "'正常查询-可以直接引用'"
  }, {
    "name" : "params",
    "value" : "'{\"robotId\": \"877\", \"userId\": \"11\",\"question\": \"啊哈哈哈哈哈哈哈哈安安大叔\",\"size\": 1}'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "robot_faq" ]
  },
  "source" : "cd18e136abc1c30f.json",
  "parameterValues" : [ "'bean-可以直接引用'", "'正常查询-可以直接引用'", "'{\"robotId\": \"877\", \"userId\": \"11\",\"question\": \"啊哈哈哈哈哈哈哈哈安安大叔\",\"size\": 1}'" ]
}