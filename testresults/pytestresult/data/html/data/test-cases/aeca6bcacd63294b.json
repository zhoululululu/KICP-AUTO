{
  "uid" : "aeca6bcacd63294b",
  "name" : "正常查询",
  "fullName" : "pytest.test_robot_manage.TestRobotManage#test_robot_detail",
  "historyId" : "098ee5d5c3768e052d59487e220bb198",
  "time" : {
    "start" : 1600424597299,
    "stop" : 1600424597354,
    "duration" : 55
  },
  "description" : "\n        详情robot\n        ",
  "descriptionHtml" : "<pre><code>    详情robot\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <function Assert.get_result at 0x0000018B4AF03510>(['358', 'zltestrobot1', 'zltestrobot1', 'ask', 1, 8, ...], ['358', 'zltestrobot1', 'zltestrobot1', 'ask', 1, 8, ...])\n +    where <function Assert.get_result at 0x0000018B4AF03510> = Assert.get_result",
  "statusTrace" : "self = <test_robot_manage.TestRobotManage object at 0x0000018B4BD3A358>\ndesc = '正常查询', params = '{ \"userId\": 11,\"robotId\":358}'\nassert_value = 'sql-select robotId,robotName,nickNameInsite,robotType,robotPackage,robotTemplate,robotStatus,addTime,userId from robot_basic_info where userId=11 and robotId=358'\n\n    @pytest.mark.parametrize('desc,params,assert_value', detail_robot_data)  # 用例参数化\n    @allure.feature(\"机器人管理\")\n    @allure.story('机器人详情')  # 描述\n    @allure.title('{desc}')  # title\n    @pytest.mark.flaky(returns=0)  # 标记失败后重新运行次数\n    @pytest.mark.robot_manage\n    def test_robot_detail(self, desc, params, assert_value):\n        \"\"\"\n        详情robot\n        \"\"\"\n        (actual_result, except_result) = RobotDetail.detail_robot(self.url, params, assert_value)\n>       assert Assert.get_result(actual_result, except_result)\nE       AssertionError: assert False\nE        +  where False = <function Assert.get_result at 0x0000018B4AF03510>(['358', 'zltestrobot1', 'zltestrobot1', 'ask', 1, 8, ...], ['358', 'zltestrobot1', 'zltestrobot1', 'ask', 1, 8, ...])\nE        +    where <function Assert.get_result at 0x0000018B4AF03510> = Assert.get_result\n\ntest_robot_manage.py:77: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1600424596335,
      "stop" : 1600424596335,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1600424599714,
      "stop" : 1600424599714,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "机器人详情"
  }, {
    "name" : "feature",
    "value" : "机器人管理"
  }, {
    "name" : "tag",
    "value" : "robot_manage"
  }, {
    "name" : "parentSuite",
    "value" : "pytest"
  }, {
    "name" : "suite",
    "value" : "test_robot_manage"
  }, {
    "name" : "subSuite",
    "value" : "TestRobotManage"
  }, {
    "name" : "host",
    "value" : "WIN-OQ20V7UABJF"
  }, {
    "name" : "thread",
    "value" : "17960-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "pytest.test_robot_manage"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "assert_value",
    "value" : "'sql-select robotId,robotName,nickNameInsite,robotType,robotPackage,robotTemplate,robotStatus,addTime,userId from robot_basic_info where userId=11 and robotId=358'"
  }, {
    "name" : "desc",
    "value" : "'正常查询'"
  }, {
    "name" : "params",
    "value" : "'{ \"userId\": 11,\"robotId\":358}'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "robot_manage" ]
  },
  "source" : "aeca6bcacd63294b.json",
  "parameterValues" : [ "'sql-select robotId,robotName,nickNameInsite,robotType,robotPackage,robotTemplate,robotStatus,addTime,userId from robot_basic_info where userId=11 and robotId=358'", "'正常查询'", "'{ \"userId\": 11,\"robotId\":358}'" ]
}