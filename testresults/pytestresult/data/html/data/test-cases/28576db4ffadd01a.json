{
  "uid" : "28576db4ffadd01a",
  "name" : "空查询-templateId为空",
  "fullName" : "pytest.test_robot_template_category.TestRobotTemplateCategory#test_query_template_query_page[空查询-templateId为空-{\"templateId\": \"\",\"curPage\": 1,\"pageSize\": 10}-bean-{\"resultlist\": ",
  "historyId" : "f310cee3f1e81b6668638ab4554d3f4c",
  "time" : {
    "start" : 1600424601206,
    "stop" : 1600424601344,
    "duration" : 138
  },
  "description" : "\n        预置回答问答对配置信息--根据分类和模板Id查询问题分页数据\n        ",
  "descriptionHtml" : "<pre><code>    预置回答问答对配置信息--根据分类和模板Id查询问题分页数据\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert None\n +  where None = <function Assert.get_result at 0x0000018B4AF03510>('{\"resultlist\": [{\"id\": \"100045126592724992\", \"question\": \"\\\\u5973\\\\u670b\\\\u53cb\", \"categoryId\": \"0\", \"answerIds\": \"[\\...07 15:17:22\", \"templateId\": \"5\"}]}], \"totalrecord\": 87, \"curPage\": 1, \"pageSize\": 10, \"totalPage\": 9, \"beginIndex\": 0}', '{\"resultlist\": [], \"totalrecord\": 0, \"curPage\": 1, \"pageSize\": 10, \"totalPage\": 1, \"beginIndex\": 0}')\n +    where <function Assert.get_result at 0x0000018B4AF03510> = Assert.get_result",
  "statusTrace" : "self = <test_robot_template_category.TestRobotTemplateCategory object at 0x0000018B4BD07C88>\ndesc = '空查询-templateId为空'\nparams = '{\"templateId\": \"\",\"curPage\": 1,\"pageSize\": 10}'\nassert_value = 'bean-{\"resultlist\": [], \"totalrecord\": 0, \"curPage\": 1, \"pageSize\": 10, \"totalPage\": 1, \"beginIndex\": 0}'\n\n    @pytest.mark.parametrize('desc,params,assert_value', query_template_query_page)  # 用例参数化\n    @allure.feature(\"预置回答问答对配置信息\")\n    @allure.story('预置回答问答对配置信息--根据分类和模板Id查询问题分页数据')  # 描述\n    @allure.title('{desc}')  # title\n    @pytest.mark.flaky(returns=0)  # 标记失败后重新运行次数\n    @pytest.mark.faq_template\n    def test_query_template_query_page(self, desc, params, assert_value):\n        \"\"\"\n        预置回答问答对配置信息--根据分类和模板Id查询问题分页数据\n        \"\"\"\n        actual_result, expect_result = FaqQueryTemplatePage.query_template_page(self.url, params,\n                                                                                assert_value)\n>       assert Assert.get_result(actual_result, expect_result)\nE       assert None\nE        +  where None = <function Assert.get_result at 0x0000018B4AF03510>('{\"resultlist\": [{\"id\": \"100045126592724992\", \"question\": \"\\\\u5973\\\\u670b\\\\u53cb\", \"categoryId\": \"0\", \"answerIds\": \"[\\...07 15:17:22\", \"templateId\": \"5\"}]}], \"totalrecord\": 87, \"curPage\": 1, \"pageSize\": 10, \"totalPage\": 9, \"beginIndex\": 0}', '{\"resultlist\": [], \"totalrecord\": 0, \"curPage\": 1, \"pageSize\": 10, \"totalPage\": 1, \"beginIndex\": 0}')\nE        +    where <function Assert.get_result at 0x0000018B4AF03510> = Assert.get_result\n\ntest_robot_template_category.py:70: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1600424599718,
      "stop" : 1600424599718,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1600424604601,
      "stop" : 1600424604601,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "预置回答问答对配置信息"
  }, {
    "name" : "story",
    "value" : "预置回答问答对配置信息--根据分类和模板Id查询问题分页数据"
  }, {
    "name" : "tag",
    "value" : "faq_template"
  }, {
    "name" : "parentSuite",
    "value" : "pytest"
  }, {
    "name" : "suite",
    "value" : "test_robot_template_category"
  }, {
    "name" : "subSuite",
    "value" : "TestRobotTemplateCategory"
  }, {
    "name" : "host",
    "value" : "WIN-OQ20V7UABJF"
  }, {
    "name" : "thread",
    "value" : "17960-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "pytest.test_robot_template_category"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "assert_value",
    "value" : "'bean-{\"resultlist\": [], \"totalrecord\": 0, \"curPage\": 1, \"pageSize\": 10, \"totalPage\": 1, \"beginIndex\": 0}'"
  }, {
    "name" : "desc",
    "value" : "'空查询-templateId为空'"
  }, {
    "name" : "params",
    "value" : "'{\"templateId\": \"\",\"curPage\": 1,\"pageSize\": 10}'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "faq_template" ]
  },
  "source" : "28576db4ffadd01a.json",
  "parameterValues" : [ "'bean-{\"resultlist\": [], \"totalrecord\": 0, \"curPage\": 1, \"pageSize\": 10, \"totalPage\": 1, \"beginIndex\": 0}'", "'空查询-templateId为空'", "'{\"templateId\": \"\",\"curPage\": 1,\"pageSize\": 10}'" ]
}