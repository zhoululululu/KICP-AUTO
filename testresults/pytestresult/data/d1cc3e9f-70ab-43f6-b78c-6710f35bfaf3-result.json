{"name": "正常查询", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <function Assert.get_result at 0x0000018B4AF03510>(['358', 'zltestrobot1', 'zltestrobot1', 'ask', 1, 8, ...], ['358', 'zltestrobot1', 'zltestrobot1', 'ask', 1, 8, ...])\n +    where <function Assert.get_result at 0x0000018B4AF03510> = Assert.get_result", "trace": "self = <test_robot_manage.TestRobotManage object at 0x0000018B4B9F58D0>\ndesc = '正常查询', params = '{\"userId\": 11,\"robotId\":358}'\nassert_value = 'sql-select robotId,robotName,nickNameInsite,robotType,robotPackage,robotTemplate,robotStatus,addTime,userId from robot_basic_info where userId=11 and robotId=358'\n\n    @pytest.mark.parametrize('desc,params,assert_value', query_robot_data)  # 用例参数化\n    @allure.feature(\"机器人管理\")\n    @allure.story('查询机器人')  # 描述\n    @allure.title('{desc}')  # title\n    @pytest.mark.flaky(returns=0)  # 标记失败后重新运行次数\n    @pytest.mark.robot_manage\n    def test_robot_query(self, desc, params, assert_value):\n        \"\"\"\n        查询robot\n        \"\"\"\n        (actual_result, except_result) = RobotQuery.query_robot(self.url, params, assert_value)\n>       assert Assert.get_result(actual_result, except_result)\nE       AssertionError: assert False\nE        +  where False = <function Assert.get_result at 0x0000018B4AF03510>(['358', 'zltestrobot1', 'zltestrobot1', 'ask', 1, 8, ...], ['358', 'zltestrobot1', 'zltestrobot1', 'ask', 1, 8, ...])\nE        +    where <function Assert.get_result at 0x0000018B4AF03510> = Assert.get_result\n\ntest_robot_manage.py:51: AssertionError"}, "description": "\n        查询robot\n        ", "parameters": [{"name": "desc", "value": "'正常查询'"}, {"name": "params", "value": "'{\"userId\": 11,\"robotId\":358}'"}, {"name": "assert_value", "value": "'sql-select robotId,robotName,nickNameInsite,robotType,robotPackage,robotTemplate,robotStatus,addTime,userId from robot_basic_info where userId=11 and robotId=358'"}], "start": 1600424596336, "stop": 1600424596392, "uuid": "228b35fc-1a2f-45b7-b62e-90589fa271fd", "historyId": "276a2259d49528fa7655c98d26aebddf", "testCaseId": "503fefe2f2682454e810108b0de400d4", "fullName": "pytest.test_robot_manage.TestRobotManage#test_robot_query", "labels": [{"name": "story", "value": "查询机器人"}, {"name": "feature", "value": "机器人管理"}, {"name": "tag", "value": "robot_manage"}, {"name": "parentSuite", "value": "pytest"}, {"name": "suite", "value": "test_robot_manage"}, {"name": "subSuite", "value": "TestRobotManage"}, {"name": "host", "value": "WIN-OQ20V7UABJF"}, {"name": "thread", "value": "17960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pytest.test_robot_manage"}]}